# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
- name: Setup variables
  set_fact:
    goroot: "/opt/go"
    gopath: "/opt/gopath/{{ env }}"
    fabricworkdir: "/opt/gopath/{{ env }}/fabric"
    fabricpath: "/opt/gopath/{{ env}}/src/github.com/hyperledger/fabric"
    fabrictestpath: "/opt/gopath/{{ env }}/src/github.com/hyperledger/fabric-test"

- name: testcase
  set_fact:
    testcase: "{{ testcase | default('multihost') }}"

- name: testcase_query
  set_fact:
    testcase_query: "{{ testcase_query | default('multihost_query') }}"

- name: Get docker logs of PTE
  shell: docker logs PTE > {{ testcase }}-pte.log 2>&1
  args:
    chdir: "{{ fabrictestpath }}/Logs"

- name: Archive the logs directory
  archive:
    path: "{{ fabrictestpath }}/Logs"
    dest: "{{ fabrictestpath }}/{{ testcase }}-{{ lookup('pipe', 'date +%m%d%Y-%H%M%S') }}.tgz"
  register: logfile

- find:
    paths: "{{ fabrictestpath }}"
    recurse: yes
    patterns: '{{ testcase }}-*.tgz'
  register: file_to_copy

- fetch:
    src: "{{ item }}"
    dest: "/tmp/"
    flat: yes
    fail_on_missing: yes
  with_items: "{{ file_to_copy.files[0].path }}"

- name: Check docker compose file stats
  stat:
    path: "{{ fabricworkdir }}/run/pte-compose.yml"
  register: pfile

- name: Shut down PTE container
  command: "docker-compose -p {{ env }}.pte-compose -f {{ fabricworkdir }}/run/pte-compose.yml down"
  no_log: true

- name: Check if there are dead containers
  command: docker ps -a -f status=exited -f name=PTE -q
  register: deadcontainers

- name: Clean up the finished containers as well
  shell: docker rm -f $(docker ps -a -f status=exited -f name=PTE -q)
  when: deadcontainers.stdout_lines | length > 0
  no_log: true

- name: Remove these PTE image
  shell: docker rmi -f pte:latest
  no_log: true

- name: Make sure that working directory is removed
  file:
    path: "{{ fabrictestpath }}"
    state: absent
