# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
- name: Setup few variables
  set_fact:
    fabricworkdir: "/opt/gopath/{{ env }}/fabric"
    fabrictestpath: "/opt/gopath/{{ env }}/src/github.com/hyperledger/fabric-test"
    gopath: "/opt/gopath/{{ env }}"

- name: Create orgs list
  set_fact:
    channelorgs: "{{ channelorgs | default([]) + item.orgs | default([]) }}"
  with_items: "{{ pte.ptechannels }}"

- name: Number of orgs in channels
  set_fact:
    numorgs: "{{ numorgs | default([]) + [ item | default() ] }}"
  with_sequence: count={{ channelorgs|length }}

- name: make numorgs list
  set_fact:
    numorgs: "{{ numorgs | list }}"

- name: Make list for channels
  set_fact:
    endlist: "{{ (channelnum|length / 4) | int }}"
  register: countvar

- name: testcase
  set_fact:
    testcase: "{{ testcase | default('multihost') }}"

- name: testcase_query
  set_fact:
    testcase_query: "{{ testcase_query | default('multihost_query') }}"

- name: Create scenario directory
  file:
    path: "{{ fabrictestpath }}/tools/PTE/CITest/{{ item }}"
    state: directory
    force: yes
    mode: 0775
  with_items: 
    - "{{ testcase }}"
    - "{{ testcase_query }}"

- name: Create preconfig directory for invoke
  file:
    path: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/{{ item }}"
    state: directory
    force: yes
    mode: 0755
  with_items:
    - channels
    - "{{ chaincode }}"
  when: testcase == "multihost"

- name: Create chaincode directory for invoke and query
  file:
    path: "{{ fabrictestpath }}/tools/PTE/CITest/{{ item }}/{{ chaincode }}"
    state: directory
    force: yes
    mode: 0755
  with_items:
    - "{{ testcase }}"
    - "{{ testcase_query }}"
  when: testcase == "multihost"

- name: Create testcases.sh for PTE
  template:
    src: "{{ playbook_dir }}/../../images/pte/testcases.sh"
    dest: "{{ fabrictestpath }}/testcases.sh"
    mode: 0755

- name: Create samplecc-create file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/samplecc-chan-create-TLS.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/channels/chan{{ item.channelnum }}-create-TLS.json"
  with_items: "{{ channellists }}"

- name: Create runCases-create.txt file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/runCases-chan-create.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/channels/runCases-chan-create{{ item }}-TLS.txt"
  with_sequence: start=1 end={{ (endlist|int + 1) }}

- name: Create samplecc-join file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/samplecc-chan-join-TLS.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/channels/chan{{ item.channelnum }}-join-TLS.json"
  with_items: "{{ channellists }}"

- name: Create runCases-join.txt file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/runCases-chan-join.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/channels/runCases-chan-join{{ item }}-TLS.txt"
  with_sequence: start=1 end={{ (endlist|int + 1) }}

- name: Create samplecc-install file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/samplecc-chan-install-TLS.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/{{ chaincode }}/{{ chaincode }}-chan{{ item.channelnum }}-install-TLS.json"
  with_items: "{{ channellists }}"

- name: Create runCases-install.txt file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/runCases-chan-install.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/{{ chaincode }}/runCases-chan-install{{ item }}-TLS.txt"
  with_sequence: start=1 end={{ (endlist|int + 1) }}

- name: Create samplecc-instantiate file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/samplecc-chan-instantiate-TLS.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/{{ chaincode }}/{{ chaincode }}-chan{{ item.channelnum }}-instantiate-TLS.json"
  with_items: "{{ channellists }}"

- name: Create runCases-instantiate.txt file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/runCases-chan-instantiate.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/preconfig/{{ chaincode }}/runCases-chan-instantiate{{ item }}-TLS.txt"
  with_sequence: start=1 end={{ (endlist|int + 1) }}

- replace:
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/{{ chaincode }}/{{ chaincode }}-chan{{ item.channelnum }}-{{ testcase }}-TLS.json"
    regexp: '^(.*)name(.*)$'
    replace: '    "name": "{{ item.name }}",'
  with_items: "{{ channellists }}"
  when: testcase != "multihost"

- replace:
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/{{ chaincode }}/{{ chaincode }}-chan{{ item.channelnum }}-{{ testcase }}-TLS.json"
    regexp: '^(.*)ServiceCredentials(.*)$'
    replace: '                {"ServiceCredentials":"CITest/CISCFiles/config-chan{{ item.channelnum|int }}-TLS.json"}'
  with_items: "{{ channellists }}"
  when: testcase != "multihost"

- replace:
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase_query }}/{{ chaincode }}/{{ chaincode }}-chan{{ item.channelnum }}-{{ testcase_query }}-TLS.json"
    regexp: '^(.*)name(.*)$'
    replace: '    "name": "{{ item.name }}",'
  with_items: "{{ channellists }}"
  when: testcase != "multihost"

- replace:
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase_query }}/{{ chaincode }}/{{ chaincode }}-chan{{ item.channelnum }}-{{ testcase_query }}-TLS.json"
    regexp: '^(.*)ServiceCredentials(.*)$'
    replace: '                {"ServiceCredentials":"CITest/CISCFiles/config-chan{{ item.channelnum|int }}-TLS.json"}'
  with_items: "{{ channellists }}"
  when: testcase != "multihost" 

- name: Create samplecc-invoke file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/samplecc-chan-invoke-TLS.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase }}/{{ chaincode }}/{{ chaincode }}-chan{{ item.channelnum }}-{{ testcase }}-TLS.json"
  with_items: "{{ channellists }}"
  when: testcase == "multihost"

- name: Create runCases-invoke.txt file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/runCases-chan.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ item[1] }}/{{ chaincode }}/runCases-chan{{ item[0].channelnum }}-{{ item[1] }}-TLS.txt"
  with_nested: 
    - "{{ channellists }}"
    - "{{ testcase }}"
  when: testcase == "multihost"

- name: Create PTEMgr.txt file for invoke
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/PTEMgr.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ item }}/{{ chaincode }}/PTEMgr-{{ item }}-TLS.txt"
  with_items: "{{ testcase }}"
  when: testcase == "multihost"

- name: Create samplecc-query file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/samplecc-chan-query-TLS.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ testcase_query }}/{{ chaincode }}/{{ chaincode }}-chan{{ item.channelnum }}-{{ testcase_query }}-TLS.json"
  with_items: "{{ channellists }}"
  when: testcase_query == "multihost_query"

- name: Create runCases-query.txt file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/runCases-chan.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ item[1] }}/{{ chaincode }}/runCases-chan{{ item[0].channelnum }}-{{ item[1] }}-TLS.txt"
  with_nested:
    - "{{ channellists }}"
    - "{{ testcase_query }}"
  when: testcase_query == "multihost_query"

- name: Create PTEMgr.txt file for query
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/PTEMgr.j2"
    dest: "{{ fabrictestpath }}/tools/PTE/CITest/{{ item }}/{{ chaincode }}/PTEMgr-{{ item }}-TLS.txt"
  with_items: "{{ testcase_query }}"
  when: testcase_query == "multihost_query"

- name: Generating the Dockerfile for PTE
  copy:
    src: "{{ playbook_dir }}/../../images/pte/Dockerfile"
    dest: "{{ fabrictestpath }}/Dockerfile"

- name: Building the docker image for PTE
  shell: "docker build -t pte:latest . "
  args:
    chdir: "{{ fabrictestpath }}"

- name: Create CISCFiles directory
  file:
    path: "{{ fabricworkdir }}/CISCFiles"
    state: directory
    mode: 0755

- name: Create config file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/config-chan-TLS.j2"
    dest: "{{ fabricworkdir }}/CISCFiles/config-chan{{ item.1 }}-TLS.json"
  with_together:
    - "{{ channels }}"
    - "{{ channelnum }}"

- name: Create docker compose file
  template:
    src: "{{ playbook_dir }}/ptesetup/templates/pte-compose.j2"
    dest: "{{ fabricworkdir }}/run/pte-compose.yml"
  with_together:
    - "{{ channels }}"
    - "{{ peers }}"

- name: Create Log directory
  file:
    path: "{{ fabrictestpath }}/Logs"
    state: directory
    mode: 0755

- name: Start PTE docker container
  shell: "TESTCASE={{ testcase }} TESTCASE_QUERY={{ testcase_query }} docker-compose -p {{ env }}.pte-compose -f {{ fabricworkdir }}/run/pte-compose.yml up -d"

- name: Checking the health of PTE container
  shell: while [ $(docker ps -f status=exited -f name=PTE -q | wc -c) -eq 0 ]; do echo "PTE container is running - {{ lookup('pipe', 'date +%m%d%Y-%H%M%S') }}";sleep 120; done
  tags: check
